import { SRSkillTreeListAPI } from "../../types";
interface BaseSkill {
    Id: number;
    Name: string;
}
interface Status {
    PropertyType: string;
    Value: number;
}
/**
 * A class that structures the skill tree's data.
 */
export declare class SRSkillTreeList {
    /**
     * The ID of the trace.
     */
    traceId: number;
    /**
     * The level of the trace.
     */
    level: number;
    /**
     * The type of the trace.
     */
    type: number;
    /**
     * The position of the trace in the tree.
     */
    pos: string;
    /**
     * The icon path of the trace.
     */
    icon: string;
    /**
     * The information about the base skill of the trace.
     */
    baseSkill: SRBaseSkill;
    /**
     * The information about the trace stat.
     */
    status: SRStatus;
    /**
     * The name of the trace.
     */
    name: string;
    /**
     * Creates a new `SRSkillTreeList` instance.
     * @param data - The data of the skill tree.
     * @param language - The language to get the name.
     */
    constructor(data: SRSkillTreeListAPI, language: string);
}
/**
 * A class that structures the base skill's data.
 */
declare class SRBaseSkill {
    /**
     * The ID of the base skill.
     */
    id: number;
    /**
     * The name of the base skill.
     */
    name: string;
    /**
     * Creates a new `SRBaseSkill` instance.
     * @param data - The data of the base skill.
     * @param language - The language to get the name.
     */
    constructor(data: BaseSkill, language: string);
}
/**
 * A class that structures the trace stat's data.
 */
declare class SRStatus {
    /**
     * The type of stat.
     */
    type: string;
    /**
     * The raw value of the trace.
     */
    value: number;
    /**
     * Creates a new `SRStatus` instance.
     * @param data - The data of the status stat.
     */
    constructor(data: Status);
    /**
     * @returns The parsed value of the stat.
     */
    parsedValue(): number | string;
    private cleanup;
}
export {};
