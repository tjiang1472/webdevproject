import { SRPlayerDetails, SRPlayerRecordInfoAPI } from "../../types";
/**
 * A class that structures the player's data.
 */
export declare class SRPlayer {
    /**
     * The information about the profile picture of the player.
     */
    profilePicture: SRProfilePicture;
    /**
     * The username of the player.
     */
    username: string;
    /**
     * The level of the player.
     */
    level: number;
    /**
     * The signature of the player.
     */
    signature: string;
    /**
     * The UID of the player.
     */
    uid: number;
    /**
     * The friend number of the player.
     */
    friendCount: number;
    /**
     * The information about various records of the player.
     */
    recordInfo: SRRecordInfo;
    /**
     * The equilibrium level of the player.
     */
    equilibriumLevel: number | string;
    /**
     * Tells if the characters info of the player's showcase are public.
     */
    showcaseEnabled: boolean;
    /**
     * The platform of the player.
     */
    platform: string;
    /**
     * Creates a new `SRPlayer` instance.
     * @param data - The data of the player.
     */
    constructor(data: SRPlayerDetails);
}
/**
 * A class that structures the profile pictures's data.
 */
declare class SRProfilePicture {
    /**
     * The id of the profile picture.
     */
    id: number;
    /**
     * The icon path of the profile picture.
     */
    icon: string;
    /**
     * Creates a new `SRPlayer` instance.
     * @param id - The id of the profile picture.
     */
    constructor(id: number);
}
/**
 * A class that structures the record's data.
 */
declare class SRRecordInfo {
    /**
     * The last finished floor by the player in the Memory of Chaos.
     */
    mocLastFinishedFloor: number;
    /**
     * The last finished floor by the player in the Forgotten Hall.
     */
    fhLastFinishedFloor: SRFHInfo;
    /**
     * The ID of the current Memory of Chaos.
     */
    mocId: number;
    /**
     * The number of lightcones obtained by the player.
     */
    lightConesObtained: number;
    /**
     * The last finished world by the player in the Simulated Universe.
     */
    simulatedUniverseLastFinishedWorld: number;
    /**
     * The number of achievements completed by the player.
     */
    achievementCount: number;
    /**
     * The number of characters obtained by the player.
     */
    charactersObtained: number;
    /**
     * The number of books obtained by the player.
     */
    booksCollected: number;
    /**
     * The number of relics owned by the player.
     */
    relicsOwned: number;
    /**
     * The number of music tracks collected by the player.
     */
    musicCollected: number;
    /**
     * The last finished stage in the current rotating endgame content..
     */
    currentRotatingEndgameContentLastFinishedStage: number;
    /**
     * The score obtained in the current rotating endgame content.
     */
    currentRotatingEndgameContentScore: number;
    /**
     * Creates a new `SRRecodInfo` instance.
     * @param data - The data of the records.
     */
    constructor(data: SRPlayerRecordInfoAPI);
}
declare class SRFHInfo {
    /**
     * The last finished floor of the FH from Jarilo VI.
     */
    jarilo: number;
    /**
     * The last finished floor of the FH from The Xianzhou Luofu.
     */
    xianzhou: number;
    constructor(fhLastFinishedFloor: number);
}
export {};
