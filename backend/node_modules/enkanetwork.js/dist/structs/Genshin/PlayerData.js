"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerData = void 0;
const handlers_1 = require("../../handlers");
const Characters_1 = require("./Characters");
const Enka_1 = require("../Enka");
const Player_1 = require("./Player");
/**
 * A class that structures the data.
 */
class PlayerData {
    language;
    /**
     * The player's information.
     */
    player;
    /**
     * The player's showcase characters information.
     */
    characters;
    /**
     * Time in seconds until the profile data get refreshed.
     */
    ttl;
    /**
     * The Enka profile data that belongs to the UID.
     */
    owner;
    /**
     * The player's UID.
     */
    uid;
    /**
     * The Request Handler.
     */
    handler;
    /**
     * Creates a new `PlayerData` instance.
     * @param data - The data of the API.
     * @param language - The language to get the names.
     */
    constructor(data, language) {
        this.language = language;
        this.player = data.playerInfo
            ? new Player_1.Player(data.playerInfo, this.language)
            : {};
        this.characters = data.avatarInfoList
            ? data.avatarInfoList.map((data) => new Characters_1.Characters(data, this.language))
            : [];
        this.ttl = data.ttl;
        this.owner = data.owner
            ? new Enka_1.Owner(data.owner)
            : {};
        this.uid = data.uid;
        this.handler = new handlers_1.RequestHandler();
    }
    async getHoyo() {
        if (!this.owner.hash)
            return {};
        const data = await this.handler.profile(`${this.owner.username}/hoyos/${this.owner.hash}`);
        return new Enka_1.Hoyos(data, this.language, this.owner.username);
    }
    async getHoyoBuilds() {
        const builds = [];
        if (!this.owner.hash)
            return [];
        const data = await this.handler.profile(`${this.owner.username}/hoyos/${this.owner.hash}/builds`);
        Object.keys(data).forEach((characterId) => builds.push(...data[characterId]));
        return builds.map((data) => new Enka_1.HoyoBuilds(data, this.language));
    }
}
exports.PlayerData = PlayerData;
