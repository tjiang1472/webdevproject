import { AssetFinderOptions, ArtifactAPI, ArtifactSubstatsAPI } from "../../types";
/**
 * A class that structures the artifact's data.
 */
export declare class Artifact {
    /**
     * The artifact's ID.
     */
    artifactId: number | string;
    /**
     * The artifact's level.
     */
    level: number;
    /**
     * The artifact's name text map hash.
     */
    nameTextMapHash: string;
    /**
     * The artifact's set name text map hash.
     */
    setNameTextMapHash: string;
    /**
     * The artifact's rank stars.
     */
    stars: number;
    /**
     * The artifact's main stat data.
     */
    mainstat: ArtifactMainStat;
    /**
     * The artifact's sub stats data.
     */
    substats: ArtifactSubstats[];
    /**
     * The artifact's rolled sub stats IDs.
     */
    rolledSubstatsIds: number[];
    /**
     * The roll quality of the substats.
     */
    substatsRollQuality: ArtifactRollQuality[];
    /**
     * The item type.
     */
    itemType: string;
    /**
     * The artifact's icon.
     */
    icon: string;
    /**
     * The artifact's equip type.
     */
    equipType: string;
    /**
     * The artifact's name.
     */
    name: string;
    /**
     * The artifact's set name.
     */
    setName: string;
    /**
     * Creates a new `Artifact` instance.
     * @param data - The data of the artifact.
     * @param language - The language to get the name.
     */
    constructor(data: ArtifactAPI, language: AssetFinderOptions["language"]);
    sumRollQuality(): any[];
}
/**
 * A class that structures the artifact's main stat data.
 */
declare class ArtifactMainStat {
    /**
     * The artifact's main stat.
     */
    stat: string;
    /**
     * The artifact's main stat value.
     */
    statValue: number;
    /**
     * The artifact's main stat id.
     */
    id: number;
    /**
     * Creates a new `ArtifactMainStat` instance.
     * @param data - The data of the artifact.
     */
    constructor(data: ArtifactAPI);
}
/**
 * A class that structures the artifact's sub stats data.
 */
declare class ArtifactSubstats {
    /**
     * The artifact's sub stat.
     */
    stat: string;
    /**
     * The artifact's sub stat value.
     */
    statValue: number;
    /**
     * Creates a new `ArtifactSubstats` instance.
     * @param data - The data of the artifact's substats.
     */
    constructor(data: ArtifactSubstatsAPI);
}
declare class ArtifactRollQuality {
    /**
     * The ID of the substat roll.
     */
    id: number;
    /**
     * The type of the substat.
     */
    type: string;
    /**
     * The quality of the roll.
     * - 4 - Max roll | 3 - Almost max roll | 2 - Medium roll | 1 - Low roll
     */
    rollQuality: number;
    /**
     * Creates a new `ArtifactRollQuality` instance.
     * @param data - The rolled substat IDs.
     */
    constructor(substatId: number);
}
export {};
