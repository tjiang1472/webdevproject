import { WrapperOptions } from "../../types";
import { EnkaProfile, HoyoBuilds, Hoyos, SRPlayerData } from "../../structs";
/**
 * A class for requesting Star Rail info to the Enka API.
 */
export declare class StarRailClient {
    /**
     * The Request handler.
     */
    private readonly handler;
    /**
     * The default language to use when no language is specified.
     */
    private language;
    /**
     * The list of valid languages that can be used.
     */
    private languages;
    /**
     * Enable cache system.
     */
    private caching?;
    /**
     * Creates a new `StarRailClient` instance.
     * @param options - The options from the Wrapper class.
     * @param options.userAgent - The User Agent used in the request. If not specified, the default User Agent will be used.
     * @param options.language - The language to get the names. If not specified, the default language will be used.
     * @param options.cache - Specify if you want to get cached data.
     */
    constructor(options?: WrapperOptions);
    /**
     * Returns the data of a Star Rail player by the given UID.
     * @param uid - The UID of the player to get the data.
     * @param language - The language to get the names.
     * @returns The data of the Star Rail player.
     */
    getPlayer(uid: string | number, language?: string): Promise<SRPlayerData>;
    /**
     * Returns the data of an Enka profile by the given username.
     * @param username - The username of the profile to get the data.
     * @returns The data of the profile.
     */
    getEnkaProfile(username: string): Promise<EnkaProfile>;
    /**
     * Returns the data of the Star Rail hoyos of an Enka profile by the given username.
     * @param username - The username of the profile to get the data.
     * @param language - The language to get the names.
     * @returns The data of the profile Star Rail hoyos.
     */
    getEnkaHoyos(username: string, language?: string): Promise<Hoyos[]>;
    /**
     * Returns the Star Rail builds of an Enka hoyo by the given username and profile hash.
     * @param username - The username of the profile to get the data.
     * @param hash - The hash of the Star Rail hoyo to get the builds.
     * @param language - The language to get the names.
     * @returns The Star Rail builds of the profile.
     */
    getEnkaHoyoBuilds(username: string, hash: string, language?: string): Promise<HoyoBuilds[]>;
}
